{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Homework 1. Exploratory Data Analysis\n",
    "\n",
    "Due: Thursday, September 18, 2014 11:59 PM\n",
    "\n",
    "<a href=https://raw.githubusercontent.com/cs109/2014/master/homework/HW1.ipynb download=HW1.ipynb> Download this assignment</a>\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Introduction\n",
    "\n",
    "In this homework we ask you three questions that we expect you to answer using data. For each question we ask you to complete a series of tasks that should help guide you through the data analysis. Complete these tasks and then write a short (100 words or less) answer to the question.\n",
    "\n",
    "**Note**: We will briefly discuss this homework assignment on Thursday in class.\n",
    "\n",
    "#### Data\n",
    "For this assignment we will use two databases: \n",
    "\n",
    "1. The [Sean Lahman's Baseball Database](http://seanlahman.com/baseball-archive/statistics) which contains the \"complete batting and pitching statistics from 1871 to 2013, plus fielding statistics, standings, team stats, managerial records, post-season data, and more. For more details on the latest release, please [read the documentation](http://seanlahman.com/files/database/readme2012.txt).\"\n",
    "\n",
    "2. [Gapminder](http://www.gapminder.org) is a great resource that contains over [500 data sets](http://www.gapminder.org/data/) related to world indicators such as income, GDP and life expectancy. \n",
    "\n",
    "\n",
    "#### Purpose\n",
    "\n",
    "In this assignment, you will learn how to: \n",
    "\n",
    "a. Load in CSV files from the web. \n",
    "\n",
    "b. Create functions in python. \n",
    "\n",
    "C. Create plots and summary statistics for exploratory data analysis such as histograms, boxplots and scatter plots. \n",
    "\n",
    "\n",
    "#### Useful libraries for this assignment \n",
    "\n",
    "* [numpy](http://docs.scipy.org/doc/numpy-dev/user/index.html), for arrays\n",
    "* [pandas](http://pandas.pydata.org/), for data frames\n",
    "* [matplotlib](http://matplotlib.org/), for plotting\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# special IPython command to prepare the notebook for matplotlib\n",
    "%matplotlib inline \n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import io\n",
    "from io import StringIO \n",
    "import requests,zipfile"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Problem 1\n",
    "\n",
    "In Lecture 1, we showed a plot that provided evidence that the 2002 and 2003 Oakland A's, a team that used data science, had a competitive advantage. Since, others teams have started using data science as well. Use exploratory data analysis to determine if the competitive advantage has since disappeared. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Problem 1(a) \n",
    "Load in [these CSV files](http://seanlahman.com/files/database/lahman-csv_2014-02-14.zip) from the [Sean Lahman's Baseball Database](http://seanlahman.com/baseball-archive/statistics). For this assignment, we will use the 'Salaries.csv' and 'Teams.csv' tables. Read these tables into a pandas `DataFrame` and show the head of each table. \n",
    "\n",
    "**Hint** Use the [requests](http://docs.python-requests.org/en/latest/), [StringIO](http://docs.python.org/2/library/stringio.html) and [zipfile](https://docs.python.org/2/library/zipfile.html) modules to get from the web.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['SchoolsPlayers.csv',\n",
       " 'SeriesPost.csv',\n",
       " 'Teams.csv',\n",
       " 'TeamsFranchises.csv',\n",
       " 'TeamsHalf.csv',\n",
       " 'AllstarFull.csv',\n",
       " 'Appearances.csv',\n",
       " 'AwardsManagers.csv',\n",
       " 'AwardsPlayers.csv',\n",
       " 'AwardsShareManagers.csv',\n",
       " 'AwardsSharePlayers.csv',\n",
       " 'Batting.csv',\n",
       " 'BattingPost.csv',\n",
       " 'Fielding.csv',\n",
       " 'FieldingOF.csv',\n",
       " 'FieldingPost.csv',\n",
       " 'HallOfFame.csv',\n",
       " 'Managers.csv',\n",
       " 'ManagersHalf.csv',\n",
       " 'Master.csv',\n",
       " 'Pitching.csv',\n",
       " 'PitchingPost.csv',\n",
       " 'readme2013.txt',\n",
       " 'Salaries.csv',\n",
       " 'Schools.csv']"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#your code here\n",
    "zip_link='http://seanlahman.com/files/database/lahman-csv_2014-02-14.zip'\n",
    "r=requests.get(zip_link).content\n",
    "s=io.BytesIO(r)\n",
    "zf = zipfile.ZipFile(s,'r')\n",
    "zf.namelist()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>yearID</th>\n",
       "      <th>teamID</th>\n",
       "      <th>lgID</th>\n",
       "      <th>playerID</th>\n",
       "      <th>salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1985</td>\n",
       "      <td>BAL</td>\n",
       "      <td>AL</td>\n",
       "      <td>murraed02</td>\n",
       "      <td>1472819</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1985</td>\n",
       "      <td>BAL</td>\n",
       "      <td>AL</td>\n",
       "      <td>lynnfr01</td>\n",
       "      <td>1090000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1985</td>\n",
       "      <td>BAL</td>\n",
       "      <td>AL</td>\n",
       "      <td>ripkeca01</td>\n",
       "      <td>800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1985</td>\n",
       "      <td>BAL</td>\n",
       "      <td>AL</td>\n",
       "      <td>lacyle01</td>\n",
       "      <td>725000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1985</td>\n",
       "      <td>BAL</td>\n",
       "      <td>AL</td>\n",
       "      <td>flanami01</td>\n",
       "      <td>641667</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   yearID teamID lgID   playerID   salary\n",
       "0    1985    BAL   AL  murraed02  1472819\n",
       "1    1985    BAL   AL   lynnfr01  1090000\n",
       "2    1985    BAL   AL  ripkeca01   800000\n",
       "3    1985    BAL   AL   lacyle01   725000\n",
       "4    1985    BAL   AL  flanami01   641667"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "salaries=pd.read_csv(zf.open('Salaries.csv'))\n",
    "salaries.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>yearID</th>\n",
       "      <th>teamID</th>\n",
       "      <th>W</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1871</td>\n",
       "      <td>PH1</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1871</td>\n",
       "      <td>CH1</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1871</td>\n",
       "      <td>BS1</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1871</td>\n",
       "      <td>WS3</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1871</td>\n",
       "      <td>NY2</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   yearID teamID   W\n",
       "0    1871    PH1  21\n",
       "1    1871    CH1  19\n",
       "2    1871    BS1  20\n",
       "3    1871    WS3  15\n",
       "4    1871    NY2  16"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "teams=pd.read_csv(zf.open('Teams.csv'))\n",
    "teams=teams[['yearID', 'teamID','W'] ]\n",
    "teams.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Problem 1(b)\n",
    "\n",
    "Summarize the Salaries DataFrame to show the total salaries for each team for each year. Show the head of the new summarized DataFrame. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>yearID</th>\n",
       "      <th>teamID</th>\n",
       "      <th>salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1985</td>\n",
       "      <td>ATL</td>\n",
       "      <td>14807000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1985</td>\n",
       "      <td>BAL</td>\n",
       "      <td>11560712</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1985</td>\n",
       "      <td>BOS</td>\n",
       "      <td>10897560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1985</td>\n",
       "      <td>CAL</td>\n",
       "      <td>14427894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1985</td>\n",
       "      <td>CHA</td>\n",
       "      <td>9846178</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   yearID teamID    salary\n",
       "0    1985    ATL  14807000\n",
       "1    1985    BAL  11560712\n",
       "2    1985    BOS  10897560\n",
       "3    1985    CAL  14427894\n",
       "4    1985    CHA   9846178"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#your code here\n",
    "salaries_all=salaries.groupby(['yearID','teamID'],as_index=False).sum()\n",
    "salaries_all.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Problem 1(c)\n",
    "\n",
    "Merge the new summarized Salaries DataFrame and Teams DataFrame together to create a new DataFrame\n",
    "showing wins and total salaries for each team for each year year. Show the head of the new merged DataFrame.\n",
    "\n",
    "**Hint**: Merge the DataFrames using `teamID` and `yearID`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>yearID</th>\n",
       "      <th>teamID</th>\n",
       "      <th>salary</th>\n",
       "      <th>W</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1985</td>\n",
       "      <td>ATL</td>\n",
       "      <td>14807000</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1985</td>\n",
       "      <td>BAL</td>\n",
       "      <td>11560712</td>\n",
       "      <td>83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1985</td>\n",
       "      <td>BOS</td>\n",
       "      <td>10897560</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1985</td>\n",
       "      <td>CAL</td>\n",
       "      <td>14427894</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1985</td>\n",
       "      <td>CHA</td>\n",
       "      <td>9846178</td>\n",
       "      <td>85</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   yearID teamID    salary   W\n",
       "0    1985    ATL  14807000  66\n",
       "1    1985    BAL  11560712  83\n",
       "2    1985    BOS  10897560  81\n",
       "3    1985    CAL  14427894  90\n",
       "4    1985    CHA   9846178  85"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#your code here\n",
    "merge_df=pd.merge(salaries_all, teams, on=['yearID','teamID'])\n",
    "merge_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Problem 1(d)\n",
    "\n",
    "How would you graphically display the relationship between total wins and total salaries for a given year? What kind of plot would be best? Choose a plot to show this relationship and specifically annotate the Oakland baseball team on the on the plot. Show this plot across multiple years. In which years can you detect a competitive advantage from the Oakland baseball team of using data science? When did this end? \n",
    "\n",
    "**Hints**: Use a `for` loop to consider multiple years. Use the `teamID` (three letter representation of the team name) to save space on the plot.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10329f240>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10a56a908>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x103fd2a58>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10a56af28>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10a7bf588>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#your code here\n",
    "# merge_df['yearID'].unique()\n",
    "annot_name='OAK'\n",
    "for year in range(2005,2010):\n",
    "    yt=merge_df[merge_df['yearID']==year]\n",
    "    plt.scatter(yt['salary']/1e6,yt['W'],color='orange')\n",
    "    plt.ylim(30,120)\n",
    "    plt.xlim(0,200)\n",
    "    plt.xlabel('Salaries(in millions)')\n",
    "    plt.ylabel('Wins')\n",
    "    plt.title('wins vs. salaries in '+ str(year) )\n",
    "    plt.grid()\n",
    "    #code for marking 'OAK'\n",
    "    plt.annotate(annot_name,xy=(yt['salary'][yt['teamID']==annot_name]/1e6,yt['W'][yt['teamID']==annot_name]),\n",
    "                xytext = (-20, 20), textcoords = 'offset points'\n",
    "                 ,arrowprops = dict(arrowstyle = '->', facecolor = 'black' , connectionstyle = 'arc3,rad=0'))\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Problem 1(e):\n",
    "\n",
    "**For AC209 Students**: Fit a linear regression to the data from each year and obtain the residuals. Plot the residuals against time to detect patterns that support your answer in 1(d). "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "#your code here"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Discussion for Problem 1\n",
    "\n",
    "*Write a brief discussion of your conclusions to the questions and tasks above in 100 words or less.*\n",
    "\n",
    "---\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Problem 2\n",
    "\n",
    "Several media reports have demonstrated the income inequality has increased in the US during this last decade. Here we will look at global data. Use exploratory data analysis to determine if the gap between Africa/Latin America/Asia and Europe/NorthAmerica has increased, decreased or stayed the same during the last two decades. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Problem 2(a)\n",
    "\n",
    "Using the list of countries by continent from [World Atlas](http://www.worldatlas.com/cntycont.htm) data, load in the `countries.csv` file into a pandas DataFrame and name this data set as `countries`.  This data set can be found on Github in the 2014_data repository [here](https://github.com/cs109/2014_data/blob/master/countries.csv). "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>AFRICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Angola</td>\n",
       "      <td>AFRICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Benin</td>\n",
       "      <td>AFRICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Botswana</td>\n",
       "      <td>AFRICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Burkina</td>\n",
       "      <td>AFRICA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Country  Region\n",
       "0   Algeria  AFRICA\n",
       "1    Angola  AFRICA\n",
       "2     Benin  AFRICA\n",
       "3  Botswana  AFRICA\n",
       "4   Burkina  AFRICA"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#your code here\n",
    "#code for dealing with ssl error\n",
    "import os, ssl\n",
    "if (not os.environ.get('PYTHONHTTPSVERIFY', '') and\n",
    "    getattr(ssl, '_create_unverified_context', None)):\n",
    "    ssl._create_default_https_context = ssl._create_unverified_context\n",
    "\n",
    "#use the code for raw data on github page\n",
    "url='https://raw.githubusercontent.com/cs109/2014_data/master/countries.csv'\n",
    "countries=pd.read_csv(url)\n",
    "countries.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Using the [data available on Gapminder](http://www.gapminder.org/data/), load in the [Income per person (GDP/capita, PPP$ inflation-adjusted)](https://spreadsheets.google.com/pub?key=phAwcNAVuyj1jiMAkmq1iMg&gid=0) as a pandas DataFrame and name this data set as `income`.\n",
    "\n",
    "**Hint**: Consider using the pandas function `pandas.read_excel()` to read in the .xlsx file directly."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>GDP per capita</th>\n",
       "      <th>1800</th>\n",
       "      <th>1801</th>\n",
       "      <th>1802</th>\n",
       "      <th>1803</th>\n",
       "      <th>1804</th>\n",
       "      <th>1805</th>\n",
       "      <th>1806</th>\n",
       "      <th>1807</th>\n",
       "      <th>1808</th>\n",
       "      <th>...</th>\n",
       "      <th>2006</th>\n",
       "      <th>2007</th>\n",
       "      <th>2008</th>\n",
       "      <th>2009</th>\n",
       "      <th>2010</th>\n",
       "      <th>2011</th>\n",
       "      <th>2012</th>\n",
       "      <th>2013</th>\n",
       "      <th>2014</th>\n",
       "      <th>2015</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Abkhazia</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>603.0</td>\n",
       "      <td>603.0</td>\n",
       "      <td>603.0</td>\n",
       "      <td>603.0</td>\n",
       "      <td>603.0</td>\n",
       "      <td>603.0</td>\n",
       "      <td>603.0</td>\n",
       "      <td>603.0</td>\n",
       "      <td>603.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1173.0</td>\n",
       "      <td>1298.0</td>\n",
       "      <td>1311.0</td>\n",
       "      <td>1548.0</td>\n",
       "      <td>1637.0</td>\n",
       "      <td>1695.0</td>\n",
       "      <td>1893.0</td>\n",
       "      <td>1884.0</td>\n",
       "      <td>1877.0</td>\n",
       "      <td>1925.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Akrotiri and Dhekelia</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Albania</td>\n",
       "      <td>667.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>668.0</td>\n",
       "      <td>668.0</td>\n",
       "      <td>668.0</td>\n",
       "      <td>668.0</td>\n",
       "      <td>668.0</td>\n",
       "      <td>668.0</td>\n",
       "      <td>668.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7476.0</td>\n",
       "      <td>7977.0</td>\n",
       "      <td>8644.0</td>\n",
       "      <td>8994.0</td>\n",
       "      <td>9374.0</td>\n",
       "      <td>9640.0</td>\n",
       "      <td>9811.0</td>\n",
       "      <td>9961.0</td>\n",
       "      <td>10160.0</td>\n",
       "      <td>10620.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>716.0</td>\n",
       "      <td>716.0</td>\n",
       "      <td>717.0</td>\n",
       "      <td>718.0</td>\n",
       "      <td>719.0</td>\n",
       "      <td>720.0</td>\n",
       "      <td>721.0</td>\n",
       "      <td>722.0</td>\n",
       "      <td>723.0</td>\n",
       "      <td>...</td>\n",
       "      <td>12088.0</td>\n",
       "      <td>12289.0</td>\n",
       "      <td>12314.0</td>\n",
       "      <td>12285.0</td>\n",
       "      <td>12494.0</td>\n",
       "      <td>12606.0</td>\n",
       "      <td>12779.0</td>\n",
       "      <td>12893.0</td>\n",
       "      <td>13179.0</td>\n",
       "      <td>13434.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 217 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          GDP per capita   1800   1801   1802   1803   1804   1805   1806  \\\n",
       "0               Abkhazia    NaN    NaN    NaN    NaN    NaN    NaN    NaN   \n",
       "1            Afghanistan  603.0  603.0  603.0  603.0  603.0  603.0  603.0   \n",
       "2  Akrotiri and Dhekelia    NaN    NaN    NaN    NaN    NaN    NaN    NaN   \n",
       "3                Albania  667.0  667.0  668.0  668.0  668.0  668.0  668.0   \n",
       "4                Algeria  716.0  716.0  717.0  718.0  719.0  720.0  721.0   \n",
       "\n",
       "    1807   1808   ...        2006     2007     2008     2009     2010  \\\n",
       "0    NaN    NaN   ...         NaN      NaN      NaN      NaN      NaN   \n",
       "1  603.0  603.0   ...      1173.0   1298.0   1311.0   1548.0   1637.0   \n",
       "2    NaN    NaN   ...         NaN      NaN      NaN      NaN      NaN   \n",
       "3  668.0  668.0   ...      7476.0   7977.0   8644.0   8994.0   9374.0   \n",
       "4  722.0  723.0   ...     12088.0  12289.0  12314.0  12285.0  12494.0   \n",
       "\n",
       "      2011     2012     2013     2014     2015  \n",
       "0      NaN      NaN      NaN      NaN      NaN  \n",
       "1   1695.0   1893.0   1884.0   1877.0   1925.0  \n",
       "2      NaN      NaN      NaN      NaN      NaN  \n",
       "3   9640.0   9811.0   9961.0  10160.0  10620.0  \n",
       "4  12606.0  12779.0  12893.0  13179.0  13434.0  \n",
       "\n",
       "[5 rows x 217 columns]"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#your code here\n",
    "# https://spreadsheets.google.com/pub?key=phAwcNAVuyj1jiMAkmq1iMg&gid=0\n",
    "income_link = 'indicator_gapminder_gdp_per_capita_ppp.xlsx'\n",
    "# source = io.BytesIO(requests.get(income_link).content)\n",
    "income = pd.read_excel(income_link, sheet_name = \"Data\")\n",
    "income.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Transform the data set to have years as the rows and countries as the columns. Show the head of this data set when it is loaded. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>GDP per capita</th>\n",
       "      <th>Abkhazia</th>\n",
       "      <th>Afghanistan</th>\n",
       "      <th>Akrotiri and Dhekelia</th>\n",
       "      <th>Albania</th>\n",
       "      <th>Algeria</th>\n",
       "      <th>American Samoa</th>\n",
       "      <th>Andorra</th>\n",
       "      <th>Angola</th>\n",
       "      <th>Anguilla</th>\n",
       "      <th>Antigua and Barbuda</th>\n",
       "      <th>...</th>\n",
       "      <th>Vietnam</th>\n",
       "      <th>Virgin Islands (U.S.)</th>\n",
       "      <th>North Yemen (former)</th>\n",
       "      <th>South Yemen (former)</th>\n",
       "      <th>Yemen</th>\n",
       "      <th>Yugoslavia</th>\n",
       "      <th>Zambia</th>\n",
       "      <th>Zimbabwe</th>\n",
       "      <th>Åland</th>\n",
       "      <th>South Sudan</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1800</th>\n",
       "      <td>NaN</td>\n",
       "      <td>603.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>667.0</td>\n",
       "      <td>716.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1197.0</td>\n",
       "      <td>618.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>757.0</td>\n",
       "      <td>...</td>\n",
       "      <td>861.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>877.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>663.0</td>\n",
       "      <td>869.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>507.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1801</th>\n",
       "      <td>NaN</td>\n",
       "      <td>603.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>667.0</td>\n",
       "      <td>716.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1199.0</td>\n",
       "      <td>620.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>757.0</td>\n",
       "      <td>...</td>\n",
       "      <td>861.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>879.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>665.0</td>\n",
       "      <td>870.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>507.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1802</th>\n",
       "      <td>NaN</td>\n",
       "      <td>603.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>668.0</td>\n",
       "      <td>717.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1201.0</td>\n",
       "      <td>623.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>757.0</td>\n",
       "      <td>...</td>\n",
       "      <td>861.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>882.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>667.0</td>\n",
       "      <td>871.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>507.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1803</th>\n",
       "      <td>NaN</td>\n",
       "      <td>603.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>668.0</td>\n",
       "      <td>718.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1204.0</td>\n",
       "      <td>626.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>757.0</td>\n",
       "      <td>...</td>\n",
       "      <td>861.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>884.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>668.0</td>\n",
       "      <td>872.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>507.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1804</th>\n",
       "      <td>NaN</td>\n",
       "      <td>603.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>668.0</td>\n",
       "      <td>719.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1206.0</td>\n",
       "      <td>628.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>757.0</td>\n",
       "      <td>...</td>\n",
       "      <td>861.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>887.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>670.0</td>\n",
       "      <td>873.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>508.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 260 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "GDP per capita  Abkhazia  Afghanistan  Akrotiri and Dhekelia  Albania  \\\n",
       "1800                 NaN        603.0                    NaN    667.0   \n",
       "1801                 NaN        603.0                    NaN    667.0   \n",
       "1802                 NaN        603.0                    NaN    668.0   \n",
       "1803                 NaN        603.0                    NaN    668.0   \n",
       "1804                 NaN        603.0                    NaN    668.0   \n",
       "\n",
       "GDP per capita  Algeria  American Samoa  Andorra  Angola  Anguilla  \\\n",
       "1800              716.0             NaN   1197.0   618.0       NaN   \n",
       "1801              716.0             NaN   1199.0   620.0       NaN   \n",
       "1802              717.0             NaN   1201.0   623.0       NaN   \n",
       "1803              718.0             NaN   1204.0   626.0       NaN   \n",
       "1804              719.0             NaN   1206.0   628.0       NaN   \n",
       "\n",
       "GDP per capita  Antigua and Barbuda     ...       Vietnam  \\\n",
       "1800                          757.0     ...         861.0   \n",
       "1801                          757.0     ...         861.0   \n",
       "1802                          757.0     ...         861.0   \n",
       "1803                          757.0     ...         861.0   \n",
       "1804                          757.0     ...         861.0   \n",
       "\n",
       "GDP per capita  Virgin Islands (U.S.)  North Yemen (former)  \\\n",
       "1800                              NaN                   NaN   \n",
       "1801                              NaN                   NaN   \n",
       "1802                              NaN                   NaN   \n",
       "1803                              NaN                   NaN   \n",
       "1804                              NaN                   NaN   \n",
       "\n",
       "GDP per capita  South Yemen (former)  Yemen  Yugoslavia  Zambia  Zimbabwe  \\\n",
       "1800                             NaN  877.0         NaN   663.0     869.0   \n",
       "1801                             NaN  879.0         NaN   665.0     870.0   \n",
       "1802                             NaN  882.0         NaN   667.0     871.0   \n",
       "1803                             NaN  884.0         NaN   668.0     872.0   \n",
       "1804                             NaN  887.0         NaN   670.0     873.0   \n",
       "\n",
       "GDP per capita  Åland  South Sudan  \n",
       "1800              NaN        507.0  \n",
       "1801              NaN        507.0  \n",
       "1802              NaN        507.0  \n",
       "1803              NaN        507.0  \n",
       "1804              NaN        508.0  \n",
       "\n",
       "[5 rows x 260 columns]"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#your code here\n",
    "income.index=income[income.columns[0]]\n",
    "income=income.drop(income.columns[0],axis=1)\n",
    "income=income.transpose()\n",
    "income.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Problem 2(b)\n",
    "\n",
    "Graphically display the distribution of income per person across all countries in the world for any given year (e.g. 2000).  What kind of plot would be best? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10d665240>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#your code here\n",
    "year=2000\n",
    "plt.hist(income.loc[year].dropna().values,bins=30)\n",
    "plt.xlabel('Per Capita Income')\n",
    "plt.ylabel('frequency')\n",
    "plt.title('plot for year:'+str(year))\n",
    "plt.grid()\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Problem 2(c)\n",
    "\n",
    "Write a function to merge the `countries` and `income` data sets for any given year. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Income</th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1637.0</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>ASIA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>9374.0</td>\n",
       "      <td>Albania</td>\n",
       "      <td>EUROPE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12494.0</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>AFRICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>38982.0</td>\n",
       "      <td>Andorra</td>\n",
       "      <td>EUROPE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7047.0</td>\n",
       "      <td>Angola</td>\n",
       "      <td>AFRICA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Income      Country  Region\n",
       "0   1637.0  Afghanistan    ASIA\n",
       "1   9374.0      Albania  EUROPE\n",
       "2  12494.0      Algeria  AFRICA\n",
       "3  38982.0      Andorra  EUROPE\n",
       "4   7047.0       Angola  AFRICA"
      ]
     },
     "execution_count": 174,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"\"\"\n",
    "Function\n",
    "--------\n",
    "mergeByYear\n",
    "\n",
    "Return a merged DataFrame containing the income, \n",
    "country name and region for a given year. \n",
    "\n",
    "Parameters\n",
    "----------\n",
    "year : int\n",
    "    The year of interest\n",
    "\n",
    "Returns\n",
    "-------\n",
    "a DataFrame\n",
    "   A pandas DataFrame with three columns titled \n",
    "   'Country', 'Region', and 'Income'. \n",
    "\n",
    "Example\n",
    "-------\n",
    ">>> mergeByYear(2010)\n",
    "\"\"\"\n",
    "#your code here\n",
    "def mergebyyear(year):\n",
    "    income1=pd.DataFrame(income.loc[year].values,columns=['Income'])\n",
    "    income1['Country']=list(income)\n",
    "    merged=pd.merge(income1,countries,on='Country',how='inner')\n",
    "    return merged\n",
    "\n",
    "mergebyyear(2010).head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Problem 2(d) \n",
    "\n",
    "Use exploratory data analysis tools such as histograms and boxplots to explore the distribution of the income per person by region data set from 2(c) for a given year. Describe how these change through the recent years?\n",
    "\n",
    "**Hint**: Use a `for` loop to consider multiple years.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10ec50748>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10f3a6588>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10ba77ba8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10ecd4f98>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10ed67d68>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10d8921d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#your code here\n",
    "years=[1960,1970,1980,2000,2010,2015]\n",
    "\n",
    "for year in years:\n",
    "    income_year=mergebyyear(year)\n",
    "    income_year.boxplot('Income', by = 'Region', rot = 90,figsize=(6,6))\n",
    "    plt.ylim(10**2, 10.5 **5)\n",
    "    plt.yscale('log')\n",
    "    plt.title('year:'+str(year))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Discussion for Problem 2\n",
    "\n",
    "*Write a brief discussion of your conclusions to the questions and tasks above in 100 words or less.*\n",
    "\n",
    "---\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Problem 3\n",
    "\n",
    "In general, if group A has larger values than group B on average, does this mean the largest values are from group A? Discuss after completing each of the problems below. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Problem 3(a)\n",
    "\n",
    "Assume you have two list of numbers, X and Y, with distribution approximately normal. X and Y have standard deviation equal to 1, but the average of X is different from the average of Y.  If the difference in the average of X and the average of Y is larger than 0, how does the proportion of X > a compare to the proportion of Y > a? "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Write a function that analytically calculates the ratio of these two proportions: Pr(X > a)/Pr(Y > a) as function of the difference in the average of X and the average of Y. \n",
    "\n",
    "**Hint**: Use the `scipy.stats` module for useful functions related to a normal random variable such as the probability density function, cumulative distribution function and survival function. \n",
    "\n",
    "**Update**: Assume Y is normally distributed with mean equal to 0. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Show the curve for different values of a (a = 2,3,4 and 5)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "Function\n",
    "--------\n",
    "ratioNormals\n",
    "\n",
    "Return ratio of these two proportions: \n",
    "    Pr(X > a)/Pr(Y > a) as function of \n",
    "    the difference in the average of X \n",
    "    and the average of Y. \n",
    "\n",
    "Parameters\n",
    "----------\n",
    "diff : difference in the average of X \n",
    "    and the average of Y. \n",
    "a : cutoff value\n",
    "\n",
    "Returns\n",
    "-------\n",
    "Returns ratio of these two proportions: \n",
    "    Pr(X > a)/Pr(Y > a)\n",
    "    \n",
    "Example\n",
    "-------\n",
    ">>> ratioNormals(diff = 1, a = 2)\n",
    "\"\"\"\n",
    "#your code here\n",
    "import scipy.stats\n",
    "def ratioNormals(diff,a):\n",
    "    x=scipy.stats.norm(diff,1)\n",
    "    y=scipy.stats.norm(0,1)\n",
    "    return (1-x.cdf(a))/(1-y.cdf(a))\n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10d295630>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#your code here\n",
    "diffs=np.linspace(0,3,30)\n",
    "a_=np.arange(2,6)\n",
    "for a in a_:\n",
    "    plt.plot(diffs,[ratioNormals(diff,a) for diff in diffs])\n",
    "    \n",
    "plt.legend(['a='+str(a) for a in a_]) \n",
    "plt.xlabel('Diff')\n",
    "plt.ylabel('Pr(X>a)/Pr(Y>a)')\n",
    "plt.title('Ratio of Pr(X > a) to Pr(Y > a) as a Function of Diff')\n",
    "plt.grid()\n",
    "plt.yscale('log')\n",
    "    \n",
    "        "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Problem 3(b)\n",
    "\n",
    "Now consider the distribution of income per person from two regions: Asia and South America. Estimate the average income per person across the countries in those two regions. Which region has the larger average of income per person across the countries in that region? \n",
    "\n",
    "**Update**: Use the year 2012. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Region</th>\n",
       "      <th>Income</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ASIA</td>\n",
       "      <td>23500.432432</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>SOUTH AMERICA</td>\n",
       "      <td>13015.750000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Region        Income\n",
       "1           ASIA  23500.432432\n",
       "5  SOUTH AMERICA  13015.750000"
      ]
     },
     "execution_count": 172,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#your code here\n",
    "year_2012=mergebyyear(2012).groupby('Region',as_index=False).mean()\n",
    "# year_2012=year_2012.groupby('Region',as_index=False).mean()\n",
    "year_2012=year_2012.loc[(year_2012['Region']=='ASIA') | (year_2012['Region']=='SOUTH AMERICA')]\n",
    "year_2012"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Problem 3(c) \n",
    "\n",
    "Calculate the proportion of countries with income per person that is greater than 10,000 dollars. Which region has a larger proportion of countries with income per person greater than 10,000 dollars? If the answer here is different from the answer in 3(b), explain why in light of your answer to 3(a).\n",
    "\n",
    "**Update**: Use the year 2012. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Income</th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1893.0</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>ASIA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>9811.0</td>\n",
       "      <td>Albania</td>\n",
       "      <td>EUROPE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12779.0</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>AFRICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>41926.0</td>\n",
       "      <td>Andorra</td>\n",
       "      <td>EUROPE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7230.0</td>\n",
       "      <td>Angola</td>\n",
       "      <td>AFRICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>20577.0</td>\n",
       "      <td>Antigua and Barbuda</td>\n",
       "      <td>NORTH AMERICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>17101.0</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>SOUTH AMERICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7291.0</td>\n",
       "      <td>Armenia</td>\n",
       "      <td>EUROPE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>42522.0</td>\n",
       "      <td>Australia</td>\n",
       "      <td>OCEANIA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>44216.0</td>\n",
       "      <td>Austria</td>\n",
       "      <td>EUROPE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>15888.0</td>\n",
       "      <td>Azerbaijan</td>\n",
       "      <td>EUROPE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>22841.0</td>\n",
       "      <td>Bahamas</td>\n",
       "      <td>NORTH AMERICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>40732.0</td>\n",
       "      <td>Bahrain</td>\n",
       "      <td>ASIA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2725.0</td>\n",
       "      <td>Bangladesh</td>\n",
       "      <td>ASIA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15261.0</td>\n",
       "      <td>Barbados</td>\n",
       "      <td>NORTH AMERICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>8287.0</td>\n",
       "      <td>Belize</td>\n",
       "      <td>NORTH AMERICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1685.0</td>\n",
       "      <td>Benin</td>\n",
       "      <td>AFRICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>7138.0</td>\n",
       "      <td>Bhutan</td>\n",
       "      <td>ASIA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>5650.0</td>\n",
       "      <td>Bolivia</td>\n",
       "      <td>SOUTH AMERICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>14905.0</td>\n",
       "      <td>Botswana</td>\n",
       "      <td>AFRICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>15234.0</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>SOUTH AMERICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>71664.0</td>\n",
       "      <td>Brunei</td>\n",
       "      <td>ASIA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>737.0</td>\n",
       "      <td>Burundi</td>\n",
       "      <td>AFRICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>41865.0</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NORTH AMERICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>21050.0</td>\n",
       "      <td>Chile</td>\n",
       "      <td>SOUTH AMERICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>11636.0</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>SOUTH AMERICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>7303.0</td>\n",
       "      <td>Fiji</td>\n",
       "      <td>OCEANIA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>1772.0</td>\n",
       "      <td>Kiribati</td>\n",
       "      <td>OCEANIA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>3672.0</td>\n",
       "      <td>Marshall Islands</td>\n",
       "      <td>OCEANIA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>13071.0</td>\n",
       "      <td>Nauru</td>\n",
       "      <td>OCEANIA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Income              Country         Region\n",
       "0     1893.0          Afghanistan           ASIA\n",
       "1     9811.0              Albania         EUROPE\n",
       "2    12779.0              Algeria         AFRICA\n",
       "3    41926.0              Andorra         EUROPE\n",
       "4     7230.0               Angola         AFRICA\n",
       "5    20577.0  Antigua and Barbuda  NORTH AMERICA\n",
       "6    17101.0            Argentina  SOUTH AMERICA\n",
       "7     7291.0              Armenia         EUROPE\n",
       "8    42522.0            Australia        OCEANIA\n",
       "9    44216.0              Austria         EUROPE\n",
       "10   15888.0           Azerbaijan         EUROPE\n",
       "11   22841.0              Bahamas  NORTH AMERICA\n",
       "12   40732.0              Bahrain           ASIA\n",
       "13    2725.0           Bangladesh           ASIA\n",
       "14   15261.0             Barbados  NORTH AMERICA\n",
       "17    8287.0               Belize  NORTH AMERICA\n",
       "18    1685.0                Benin         AFRICA\n",
       "19    7138.0               Bhutan           ASIA\n",
       "20    5650.0              Bolivia  SOUTH AMERICA\n",
       "22   14905.0             Botswana         AFRICA\n",
       "23   15234.0               Brazil  SOUTH AMERICA\n",
       "24   71664.0               Brunei           ASIA\n",
       "26     737.0              Burundi         AFRICA\n",
       "29   41865.0               Canada  NORTH AMERICA\n",
       "33   21050.0                Chile  SOUTH AMERICA\n",
       "35   11636.0             Colombia  SOUTH AMERICA\n",
       "53    7303.0                 Fiji        OCEANIA\n",
       "83    1772.0             Kiribati        OCEANIA\n",
       "99    3672.0     Marshall Islands        OCEANIA\n",
       "110  13071.0                Nauru        OCEANIA"
      ]
     },
     "execution_count": 170,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#your code here\n",
    "# year_2012=mergebyyear(2012)\n",
    "year_2012=mergebyyear(2012).groupby('Region',as_index=False)\n",
    "\n",
    "# len(year_2012[year_2012['Income']>10000])/len(year_2012)\n",
    "# income_10k=year_2012[year_2012['Income']>10000]\n",
    "# year_2012\n",
    "#create a dataframe reflecting region,fraction of countries with income >10k,and mean income for those countries in that\n",
    "#region\n",
    "# income_10k=year_2012[year_2012['Income']>10000]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Problem 3(d)\n",
    "\n",
    "**For AC209 Students**: Re-run this analysis in Problem 3 but compute the average income per person for each region, instead of the average of the reported incomes per person across countries in the region. Why are these two different? Hint: use this [data set](https://spreadsheets.google.com/pub?key=phAwcNAVuyj0XOoBL_n5tAQ&gid=0). "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "#your code here"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Discussion for Problem 3\n",
    "\n",
    "*Write a brief discussion of your conclusions to the questions and tasks above in 100 words or less.*\n",
    "\n",
    "---\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
